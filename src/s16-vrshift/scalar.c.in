// Copyright 2022 Google LLC
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree.

$assert CHANNEL_TILE >= 1
#include <assert.h>
#include <stddef.h>
#include <stdint.h>

#include <xnnpack/math.h>
#include <xnnpack/vrshift.h>


void xnn_s16_vrshift_ukernel__scalar_x${CHANNEL_TILE}(
    size_t c,
    const int16_t* input,
    uint32_t shift,
    int16_t* output) {

  assert(c > 0);
  assert(input != NULL);
  assert(shift < 32);
  assert(output != NULL);

 $if CHANNEL_TILE > 1:
   for (; c >= ${CHANNEL_TILE}; c -= ${CHANNEL_TILE}) {
     $for C in range(CHANNEL_TILE):
       const uint16_t vi${C} = (uint16_t) input[${C}];
     input += ${CHANNEL_TILE};

     $for C in range(CHANNEL_TILE):
       const uint16_t vout${C} = vi${C} << (uint16_t) shift;

     $for C in range(CHANNEL_TILE):
       output[${C}] = (int16_t) vout${C};
     output += ${CHANNEL_TILE};
   }

 if XNN_UNLIKELY(c != 0) {
   do {
     const uint16_t vi = (uint16_t) *input++;

     const uint16_t vout = vi << (uint16_t) shift;

     *output++ = (int16_t) vout;
   } while (--c != 0);
 }
}
