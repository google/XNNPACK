// Copyright 2024 Google LLC
//
// This source code is licensed under the BSD-style license found in the
// LICENSE file in the root directory of this source tree.

$assert NR > 1
$assert KBLOCK >= 1
$assert TYPE in ["int8_t"]

#include <assert.h>
#include <stddef.h>
#include <stdint.h>

#include <xnnpack/math.h>
#include <xnnpack/packw.h>


$BITS = {"int8_t": 8}[TYPE]
$BTYPE = {"int8_t": "uint32_t"}[TYPE]
$WTYPE = {"int8_t": "int8_t"}[TYPE]
void xnn_x${BITS}_packw_gemm_goi_ukernel_x${NR}c4__${X8KERNEL}(
  size_t g,
  size_t nc,
  size_t kc,
  size_t nr,
  size_t kr,
  size_t sr,
  const ${WTYPE}* weights,
  const ${BTYPE}* bias,
  const void* scale,
  ${WTYPE}* packed_weights,
  size_t extra_bytes,
  const void* params)
{
  assert(g != 0);
  assert(nc != 0);
  assert(kc != 0);
  assert(nr == ${NR});   // This kernel is for NR=${NR}
  assert(kr == 4);
  assert(sr == 1);
  assert(weights != NULL);
  assert(packed_weights != NULL);

  assert((kc & 3) == 0);

  xnn_x32_packw_gemm_goi_ukernel_x${NR}__${X32KERNEL}(g, nc, kc / 4, nr, 1, sr,
    (const uint32_t*) weights,
    (const uint32_t*) bias,
    scale,
    (uint32_t*)packed_weights,
    extra_bytes,
    params);
}
